const e=()=>{let e,t;chrome.storage.local.set({transcript:""}),chrome.storage.local.get("key",(({key:t})=>e=t)),navigator.mediaDevices.getDisplayMedia({video:!0,audio:!0}).then((a=>{if(!e)return alert("You must provide a Deepgram API Key in the options page.");if(0==a.getAudioTracks().length)return alert("Please share your tab with audio. Refresh the page.");if(!MediaRecorder.isTypeSupported("audio/webm"))return alert("Browser not supported");const r=new MediaRecorder(a,{mimeType:"audio/webm"});t=new WebSocket("wss://api.deepgram.com/v1/listen?model=general-enhanced&punctuate=true",["token",e]),t.onopen=()=>{console.log({event:"onopen"}),r.addEventListener("dataavailable",(async e=>{e.data.size>0&&1===t.readyState&&t.send(e.data)})),r.start(1e3)},t.onmessage=e=>{const t=JSON.parse(e.data).channel.alternatives[0].transcript;t&&chrome.storage.local.get("transcript",(e=>{chrome.storage.local.set({transcript:e.transcript+=" "+t}),chrome.runtime.sendMessage({message:"transcriptavailable"}).catch((e=>({})))}))}})),chrome.runtime.onMessage.addListener((({message:e})=>{"stop"==e&&(t.close(),alert("Transcription ended"))}))};function t(){chrome.storage.local.get("transcript",(({transcript:e})=>{document.getElementById("transcript").innerHTML=e,e&&document.getElementById("clear")?.removeAttribute("disabled")}))}async function a(){const[e]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});return console.log({tab:e}),e}t(),document.getElementById("start")?.addEventListener("click",(async()=>{const t=await a();if(!t)return alert("Require an active tab");chrome.scripting.executeScript({target:{tabId:t.id},func:e})})),document.getElementById("stop")?.addEventListener("click",(async()=>{const e=await a();if(!e)return alert("Require an active tab");chrome.tabs.sendMessage(e.id,{message:"stop"})})),chrome.runtime.onMessage.addListener((({message:e})=>{"transcriptavailable"==e&&t()})),document.getElementById("clear")?.addEventListener("click",(()=>(chrome.storage.local.set({transcript:""}),document.getElementById("transcript").innerHTML="",void(document.getElementById("clear").disabled=!0))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
